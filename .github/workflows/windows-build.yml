name: Build and Package ChatStreamer App

# This workflow will be triggered on a push to the main branch.
# You can also use 'workflow_dispatch' for manual runs.
on:
  push:
    branches:
      - main

# Define environment variables
env:
  JAVAFX_VERSION: 24.0.2
  JAVAFX_MODULES: "javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.web,javafx.swing"

jobs:
  build-and-package:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24

      # --- START: Runtime Creation Steps ---
      - name: Download and extract JavaFX files
        shell: pwsh
        run: |
          Write-Host "Downloading JavaFX JMODs for version ${{ env.JAVAFX_VERSION }}"
          Invoke-WebRequest -Uri "https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_windows-x64_bin-jmods.zip" -OutFile "javafx-jmods.zip"
          Expand-Archive "javafx-jmods.zip" -DestinationPath "javafx-jmods-temp"
          
          Write-Host "Downloading JavaFX SDK for version ${{ env.JAVAFX_VERSION }}"
          Invoke-WebRequest -Uri "https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_windows-x64_bin-sdk.zip" -OutFile "javafx-sdk.zip"
          Expand-Archive "javafx-sdk.zip" -DestinationPath "javafx-sdk-temp"

      - name: Correct directory structure
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "javafx-jmods"
          Copy-Item -Path "javafx-jmods-temp/javafx-jmods-${{ env.JAVAFX_VERSION }}/*" -Destination "javafx-jmods" -Recurse -Force
          Remove-Item -Recurse -Force "javafx-jmods-temp"
          New-Item -ItemType Directory -Force -Path "javafx-sdk"
          Copy-Item -Path "javafx-sdk-temp/javafx-sdk-${{ env.JAVAFX_VERSION }}/*" -Destination "javafx-sdk" -Recurse -Force
          Remove-Item -Recurse -Force "javafx-sdk-temp"
          
      - name: Create custom JavaFX runtime
        shell: pwsh
        run: |
          $runtimeDir = "javafx-runtime"
          Remove-Item -Recurse -Force $runtimeDir -ErrorAction SilentlyContinue
          jlink `
            --module-path "javafx-jmods;$env:JAVA_HOME\jmods" `
            --add-modules ${{ env.JAVAFX_MODULES }} `
            --output $runtimeDir `
            --compress 2 `
            --strip-debug `
            --no-header-files `
            --no-man-pages

      - name: Copy JDK executables
        shell: pwsh
        run: |
          Copy-Item -Path "$env:JAVA_HOME/bin/*" -Destination "javafx-runtime/bin" -Recurse -Force
          
      - name: Copy JavaFX SDK native libraries
        shell: pwsh
        run: |
          Copy-Item -Path "javafx-sdk/lib/*" -Destination "javafx-runtime/bin" -Recurse -Force
      # --- END: Runtime Creation Steps ---

      # --- START: App Build and Package Steps ---
      - name: Compile and create JAR
        shell: pwsh
        run: |
          # Use the JavaFX SDK libraries to compile your project
          # Adjust the paths and modules as needed for your specific project
          javac --module-path "javafx-sdk/lib" --add-modules ${{ env.JAVAFX_MODULES }} `
            -d build/classes `
            src/java/*.java
            
          # Create the final JAR file
          jar --create --file dist/ChatStreamer.jar `
            --main-class Launcher `
            -C build/classes/ .

      - name: Package Standalone Application with jpackage
        shell: pwsh
        run: |
          jpackage `
            --type exe `
            --name QuarkTutor `
            --input dist `
            --main-jar ChatStreamer.jar `
            --runtime-image javafx-runtime `
            --app-version 1.0 `
            --vendor "HumbleCoders Software (Cyberkid DevLabs)" `
            --win-shortcut `
            --win-menu

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ChatStreamer-Installer-Windows
          path: out/
